on:
  push:
    branches:
      - test

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0
        
      - name: Setup Go environment
        uses: actions/setup-go@v3.3.1
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.16
        
      - name: build golang backend
        run: |
          cd ./src/backend
          chmod +x ./server.sh
          ./server.sh build

      - name: ssh-pipeline
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-pipeline@7f022867934a210af826af99ef80d96f03a094d5
        uses: cross-the-world/ssh-pipeline@v1.2.0
        with:
          # ssh remote host
          host: ${{ secrets.SERVER_HOST }}
          # ssh remote user
          user: ${{ secrets.SERVER_USER }}
          # ssh remote password
          pass: ${{ secrets.SERVER_PWD }}
          # execute commands on ssh
          script: |
            cd /code/kokochatting
            ./server.sh stop
            rm -rf *
        
      - name: scp-pipeline
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/scp-pipeline@b4d86397129250eb940fabdc3f7a435436d2503a
        uses: cross-the-world/scp-pipeline@v1.2.1
        with:
          # ssh remote host
          host: ${{ secrets.SERVER_HOST }}
          # ssh remote user
          user: ${{ secrets.SERVER_USER }}
          # ssh remote password
          pass: ${{ secrets.SERVER_PWD }}
          # source to copy
          local: './src/backend/*'
          # destination for copy
          remote: '/code/kokochatting/'
          
      - name: ssh-pipeline
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-pipeline@7f022867934a210af826af99ef80d96f03a094d5
        uses: cross-the-world/ssh-pipeline@v1.2.0
        with:
          # ssh remote host
          host: ${{ secrets.SERVER_HOST }}
          # ssh remote user
          user: ${{ secrets.SERVER_USER }}
          # ssh remote password
          pass: ${{ secrets.SERVER_PWD }}
          # execute commands on ssh
          script: |
            cd /code/kokochatting
            chmod +x ./koko
            chmod +x ./server.sh
            ./server.sh restart